using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy : Mover
{
    // Experience
    public int xpValue = 1;

    // Logic
    public float triggerLength = 1;     //Counter for character to find a baddy      
    private bool chasing;               // If player is pursuing an enemy or not.
    private bool collidingWithBaddy; // Important to stop moving toward baddy, when you're already colliding to prevent glitches
    
    private Transform playerTransform;
    private Vector3 startingPosition;

    // Hitbox
    public ContactFilter2D filter;
    private BoxCollider2D hitbox;
    private Collider2D[] hits = new Collider2D[10]; // Cannot inherit from Collidable - multi-inheritance is not a feature of C#

    protected override void Start()
    {
        base.Start();
        playerTransform = GameManager.instance.player.transform;
        startingPosition = transform.position;
        hitbox = transform.GetChild(0).GetComponent<BoxCollider2D>();
    }

    private void FixedUpdate()
    {
        // For loop goes here. 
        
        //I will need to tackle this block of code next
        for(triggerLength < 200, TriggerLength++)
        {
            //Aaron this will have to be corrected by you. I am not sure what you used in place of playerTransoform
            if(Vector3.Distance(playerTransform.position, startingPosition) < chaseLength)
            {
                if (Vector3.Distance(playerTransform.position, startingPosition) < triggerLength)
                    chasing = true;

                if (chasing)
                {
                    if (!collidingWithPlayer)
                    {
                        UpdateMotor((playerTransform.position - transform.position).normalized);
                    }
                }
            else
            {
                UpdateMotor(startingPosition - transform.position);
            }
        }

            // check for overlaps
            collidingWithPlayer = false;
            boxCollider.OverlapCollider(filter, hits);
            for (int i = 0; i < hits.Length; i++)
            {
                if (hits[i] == null)
                    continue;



                if(hits[i].tag == "Fighter" && hits[i].name == "Player")
                {
                    collidingWithPlayer = true;
                }
          
            }
        }
        protected override void Death()
        {
        Destroy(gameObject);
        GameManager.instance.GrantXp(xpValue);
        GameManager.instance.ShowText("+" + xpValue + " xp", 30, Color.magenta, transform.position, Vector3.up * 40, 1.0f);
    }
}
